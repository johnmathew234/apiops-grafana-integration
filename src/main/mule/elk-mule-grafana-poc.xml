<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:java="http://www.mulesoft.org/schema/mule/java"
	xmlns:ftp="http://www.mulesoft.org/schema/mule/ftp"
	xmlns:cloudhub="http://www.mulesoft.org/schema/mule/cloudhub" xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/cloudhub http://www.mulesoft.org/schema/mule/cloudhub/current/mule-cloudhub.xsd
http://www.mulesoft.org/schema/mule/ftp http://www.mulesoft.org/schema/mule/ftp/current/mule-ftp.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd">
	<os:object-store name="Object_store" doc:name="Object store" doc:id="393b3f2e-b460-4af1-b3fb-b8efbd5782a6" />
	<file:config name="File_Config" doc:name="File Config" doc:id="95346a81-dcbd-4e5c-bb34-6a4a93fb320d" >
		<file:connection workingDir="C:/Users/John/Desktop/New folder (5)" />
	</file:config>
	<http:request-config name="grafana_req_config_basicauth" doc:name="HTTP Request configuration" doc:id="72f02509-807e-48a6-9e43-2f22b10d93c2" >
		<http:request-connection host="localhost" port="3000" >
			<http:authentication >
				<http:basic-authentication username="admin" password="hellohello" />
			</http:authentication>
		</http:request-connection>
	</http:request-config>
	<flow name="app-logs-flow" doc:id="e9881033-ad45-49b3-9328-f0cca9534290" initialState="started">
		<http:listener doc:name="Listener" doc:id="6db33b2d-c4a2-4c2c-a192-2495c55ef0ec" config-ref="httpListenerConfig" path="/logs"/>
		<flow-ref doc:name="Flow Reference" doc:id="b79daf9c-993f-4b0d-a945-4cd1599e4cc5" name="grafana-key-generation"/>
		<logger level="INFO" doc:name="Entry Logger" doc:id="9c85852a-28f8-42b1-ab8e-f50269dd105e" message="----Application Logs Extraction Started"/>
		<logger level="INFO" doc:name="Logger" doc:id="d63b769e-a969-46a9-8f01-f321ec19c096" />
		<http:request method="POST" doc:name="Get Access Token" doc:id="4e57097a-a79f-408a-bea1-8d489b01f847" path="/accounts/login" config-ref="httpRequestConfiguration" responseTimeout="300000">
			<reconnect-forever frequency="200000" />
			<http:query-params><![CDATA[#[output application/java
---
{
	"username" : "${anypoint.username}",
	"password" : "${anypoint.password}"
}]]]></http:query-params>
		</http:request>
		<ee:transform doc:name="Access Token to JSON" doc:id="d04cf751-41ef-49c0-b04a-25a7d92274d8">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="accessToken"><![CDATA[%dw 2.0
output application/json
---
payload."access_token"]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<cloudhub:list-applications doc:name="List Applications" doc:id="44480502-4b9d-4d31-8d8b-e0086b799fff" config-ref="CloudHub_Config"/>
		<ee:transform doc:name="Paylod to JSON Array" doc:id="3efd0e59-5865-4d47-b1e4-c07d50a09d78" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map($.domain)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<foreach doc:name="For Each" doc:id="ae677de0-810a-4288-96b1-6f4e11052463" >
			<flow-ref doc:name="Call App Logs Batch Flow" doc:id="c6cd2b62-2d42-48b7-a4c4-52f2a716ef59" name="app-logs-batch-flow" />
			<logger level="INFO" doc:name="Log extraction started" doc:id="ad987c0f-1cf8-4a6f-82d1-fc21584e4938" message='#["LOG EXTRACTION STARTED"]' />
		</foreach>
		<logger level="INFO" doc:name="Exit Logger" doc:id="cd9e1d41-8f5a-42be-9072-0aa61e6c13b3" message="----Application Logs Extraction Completed"/>
	
</flow>
	<flow name="grafana-key-generation" doc:id="91c57261-7ea2-4cf5-bb30-21c2695198cc" >
		<os:retrieve doc:name="Retrieve the api-key" doc:id="fb7febcd-8963-40b3-a639-3febba60b571" key="api-key-grafana" objectStore="Object_store" target="api-key">
				<os:default-value><![CDATA[#[0]]]></os:default-value>
					</os:retrieve>
		<choice doc:name="checking if the api-key is there in OS" doc:id="1d608e69-7221-45da-9d61-445ca4da7356">
			<when expression="#[vars.'api-key' == 0]">
				<http:request method="POST" doc:name="Request to grafana for api-key" doc:id="574e519e-13f0-43ae-9f50-bf1fe5e69701" config-ref="grafana_req_config_basicauth" path="/api/auth/keys" target="api-key" targetValue="#[payload.key]">
			<http:body><![CDATA[#[output application/json
---
{"name":"api-api", "role": "Admin"}]]]></http:body>
			<http:headers><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/json"
}]]]></http:headers>
		</http:request>
				<os:store doc:name="store the api-key" doc:id="f75900a6-37e8-443d-ab95-ced17da91052" key="api-key-grafana" objectStore="Object_store">
				<os:value><![CDATA[#[vars.'api-key']]]></os:value>
			</os:store>
			</when>
			<otherwise>
				<logger level="INFO" doc:name="api-key already exists" doc:id="9d6ba892-d4e7-40cb-a9d8-241a586ac0e5" message='#[""]' />
			</otherwise>
		</choice>
	</flow>
	<flow name="app-logs-batch-flow" doc:id="6c7afc6d-202b-47fd-b313-957c6ae0905a" >
		<set-variable value="#[payload]" doc:name="Set Variable Domain" doc:id="a2d3561f-7c57-4caa-b0d0-2b14402f07cc" variableName="domain" />
		<http:request method="GET" doc:name="Get Instance Id" doc:id="46b3c565-41f8-4e4c-aa94-9e385f701f73" config-ref="httpRequestConfiguration" path="/cloudhub/api/v2/applications/{appname}/deployments?orderByDate=DESC" responseTimeout="300000" >
			<http:headers ><![CDATA[#[output application/java
---
{
	"X-ANYPNT-ENV-ID" : "${anypoint.envid}",
	"Authorization" : "bearer " ++ vars.accessToken
}]]]></http:headers>
			<http:uri-params ><![CDATA[#[output application/java
---
{
	"appname" : vars.domain
}]]]></http:uri-params>
		</http:request>
		<ee:transform doc:name="Transform Message" doc:id="75f8dca9-8c9d-466d-903d-6d4dfe656496" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var date = max(payload.data.createTime)
---
//(flatten(payload.data.instances)).instanceId reduce ($)
(((payload.data map (item, index) ->{
    "data" : if(item.createTime == date) item else null 
} ) filter ((item, index) -> item.data != null )).data.instances..instanceId) reduce ($)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<os:retrieve doc:name="Retrieve" doc:id="885e1d5d-5345-428e-85ef-884edc2eb403" key="#[vars.domain]" target="recordId" objectStore="Object_store">
			<os:default-value ><![CDATA[0]]></os:default-value>
		</os:retrieve>
		<http:request method="POST" doc:name="Get Application Logs" doc:id="8db6b4bb-8f14-47be-8591-71e1f708477e" config-ref="httpRequestConfiguration" path="/cloudhub/api/v2/applications/{appname}/logs" responseTimeout="3000000" targetValue="#[output application/json --- payload]">
				<reconnect-forever frequency="200000" />
						<http:body ><![CDATA[#[output application/json
---

{ 
"instanceId": payload, 
"startTime": " ", 
"endTime": " ", 
"priority": "", 
"threadName": "", 
"limit": 100, 
"limitMsgLen": 200000, 
"descending": false,
"lowerId" : vars.recordId as String
}]]]></http:body>
			<http:headers><![CDATA[#[output application/java
---
{
	"X-ANYPNT-ENV-ID" : "${anypoint.envid}",
	"Authorization" : "bearer " ++ vars.accessToken
}]]]></http:headers>
			<http:uri-params><![CDATA[#[output application/java
---
{
	"appname" : vars.domain,
	"instance_id" : payload
}]]]></http:uri-params>
		</http:request>
		<choice doc:name="/checking if there is cloudHub logs for the app" doc:id="78155ac5-868b-4611-9f9a-42c9af63373f" >
			<when expression="#[sizeOf(payload) != 0]">
				<ee:transform doc:name="transforming logs and timestamp from epoch" doc:id="e3ac3261-4982-4816-bf8f-46c38cb2e20f">
					<ee:message>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="appLogs" ><![CDATA[%dw 2.0
output application/json
var temp = payload map (item, index) -> (

if(item.event.message contains("correlationId"))((read (item.event.message, "application/json")) ++ ("deploymentId" : item.deploymentId) ++ ("line" : item.line) ++ ("recordId" : item.recordId)) else item
//read (item.event.message, "application/json") 

)
---

temp map ((item, index) ->if(keysOf(item)[0] contains  "correlationId")((((item - "elapsed") - "applicationVersion") - "threadName") - "locationInfo" ++ ("fileName" : item.locationInfo.fileName) ++ ("rootContainer" : item.locationInfo.rootContainer) )  else ((item - "event") - "recordId") ++ (("loggerName" : item.event.loggerName) ++ ("threadName" : item.event.threadName) ++ ("message" : item.event.message) ++ ("priority" : item.event.priority) ++ ("timestamp" : ( ((item.event.timestamp as Number/1000) as DateTime  + |PT5H30M|) as String {format:"yyyy-MM-dd HH:mm:ss"})) ++ ("recordId" : item.recordId)))

//read(payload,"application/json")

/*
{
  "message": “”,
  "correlationId" :
  “tracePoint”:
  “priority”
   “fileName”:
  “timestamp”:
  “applicationName”:
  “rootContainer”:
   “environment”:
   "deploymentId": "5ff69f0ff0eaef427f42982f",
   "content"
}


*/]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<http:request method="GET" doc:name="Request for application stats" doc:id="9d03afd9-4fa9-4ec9-b822-654a303f9e52" config-ref="cloudhub-api" path="/cloudhub/api/v2/applications/{appname}" outputMimeType="application/json">
					<http:headers ><![CDATA[#[output application/java
---
{
	"" : "Value",
	"X-ANYPNT-ENV-ID" : "${anypoint.envid}",
	"Authorization" : "Bearer " ++ vars.accessToken
}]]]></http:headers>
					<http:uri-params ><![CDATA[#[output application/java
---
{
	"appname" : vars.domain
}]]]></http:uri-params>
				</http:request>
				<ee:transform doc:name="transforming app stats" doc:id="f811cda1-bee4-4f79-a123-7876f4bb69d2">
					<ee:message>
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---

// application overview panel
vars.appLogs  ++

[{
    "status" : payload.status,
    "runtime" : payload.muleVersion.version,
    "name" : payload.workers."type".name,
    //"weight" :  payload.workers."type".weight,
    "workers" :  payload.workers."type".cpu ++ " x " ++ payload.workers.amount as String,
    "memory" :  payload.workers."type".memory,
    "amount" : payload.workers.amount,
    "totalOrgWorkers" : payload.workers.totalOrgWorkers,
    "remainingOrgWorkers" :payload.workers.remainingOrgWorkers,
    "deployedRegion" : payload.workerStatuses.deployedRegion[0],
 ("lastUpdateTime" :  ( ((payload.lastUpdateTime as Number/1000) as DateTime  + |PT5H30M|) as String {format:"yyyy-MM-dd HH:mm:ss"})) 
}]]]></ee:set-payload>
					</ee:message>
					<ee:variables >
					</ee:variables>
				</ee:transform>
				<ee:transform doc:name="transforming app stats and app Logs" doc:id="b0bac801-0eed-4c23-aabf-edd47606b614">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
/*
payload map(item,index)->
{
	"data": "recordId: " as String ++ item.recordId  as String default " " ++ ", deploymentId: " as String ++ item.deploymentId default " " as String ++ ", instanceId: " as String ++ item.instanceId default " " as String ++ ", line: " as String ++ item.line default " " as String ++ ", event: {loggerName: " as String ++ item.event.loggerName as String ++ ", threadName: " as String ++ item.event.threadName as String ++ ", message: " as String ++ item.event.message as String ++ ", priority: " as String ++ item.event.priority as String ++ ", timestamp: " as String ++ item.event.timestamp as String ++ "}" as String
}
*/

payload map (item, index) -> (
     if((keysOf(item)[0] contains("correlationId")))("{correlationId: " as String ++ item.correlationId as String default " " ++ ", message: " as String ++ item.message  as String default " "
++ ", tracePoint: " as String ++ item.tracePoint  as String default " "
 ++ ", priority: " as String ++ item.priority  as String default " "
++ ", timestamp: " as String ++ item.timestamp  as String default " "
++ ", content: " as String ++ (write(item.content, "application/json") as String replace  /[^a-z0-9A-Z {:,.}]/ with "") 
++ ", applicationName: " as String ++ item.applicationName  as String default " "
++ ", environment: " as String ++ item.environment  as String default " "
 ++ ", deploymentId: " as String ++ item.deploymentId  as String default " "
++ ", line: " as String ++ item.line  as String default " "
++ ", recordId: " as String ++ item.recordId  as String default " "
++ ", fileName: " as String ++ item.fileName  as String default " "

++ ", rootContainer: " as String ++ item.rootContainer  as String default " " ++ "}"

 ) else if((keysOf(item)[3] contains("loggerName")))(
 "{deploymentId: " as String ++ item.deploymentId  as String default " "
++ ", instanceId: " as String ++ item.instanceId  as String default " "
++ ", line: " as String ++ item.line  as String default " "
++ ", loggerName: " as String ++ item.loggerName  as String default " "
++ ", threadName: " as String ++ item.threadName  as String default " "
++ ", message: " as String ++ item.message  as String default " "
 ++ ", priority: " as String ++ item.priority  as String default " "
 ++ ", timestamp: " as String ++ item.timestamp  as String default " "
++ ", recordId: " as String ++ item.recordId  as String default " " ++ "}"

 )
 else (
 "{status: " as String ++ item.status  as String default " "
++ ", runtime: " as String ++ item.runtime  as String default " "
++ ", name: " as String ++ item.name  as String default " "
++ ", workers: " as String ++ item.workers  as String default " "
++ ", memory: " as String ++ item.memory  as String default " "
++ ", amount: " as String ++ item.amount  as String default " "
++ ", totalOrgWorkers: " as String ++ item.totalOrgWorkers  as String default " "
++ ", remainingOrgWorkers: " as String ++ item.remainingOrgWorkers  as String default " "
++ ", deployedRegion: " as String ++ item.deployedRegion  as String default " "
++ ", lastUpdateTime: " as String ++ item.lastUpdateTime  as String default " " ++ "}"

 )


)

/*
++ ", instanceId: " as String ++ item.instanceId default " " as String ++ ", line: " as String ++ item.line  as String default " "
++ ", loggerName: " as String ++ item.loggerName  as String default " "
++ ", threadName: " as String ++ item.threadName  as String default " "
++ ", message: " as String ++ item.message  as String default " "
++ ", priority: " as String ++ item.priority  as String default " "
++ ", timestamp: " as String ++ item.timestamp  as String default " "
++ ", recordId: " as String ++ item.recordId  as String default " "
*/
]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<file:write doc:name="/writing the app logs to fileBeats to be fetched by logstash" doc:id="64d38c2a-04de-4673-aea1-b2ea958aa4e9" path='#[lower(vars.domain) ++ ".log"]' mode="APPEND" config-ref="File_Config">
				</file:write>
				<os:store doc:name="Store" doc:id="b5a6f4be-36d8-4e48-ae2e-7fa132a855f4" objectStore="Object_store" key="#[vars.domain]">
					<os:value ><![CDATA[#[vars.appLogs.recordId[-1]]]]></os:value>
				</os:store>
				<try doc:name="Try" doc:id="45cf02f5-ebc8-4210-975d-f4bac8969565" >
					<http:request method="GET" doc:name="/checking if the index pattern is present in ELK" doc:id="10e6693f-69ee-4798-910c-3f05caba85c3" config-ref="elk_request_config" path="/{indexName}">
						<http:uri-params ><![CDATA[#[output application/java
---
{
	"indexName" : lower(vars.domain) ++ ".log"
}]]]></http:uri-params>
					</http:request>
					<ee:transform doc:name="Transform Message" doc:id="a5a94e3f-d282-4607-b060-11b6ebc63aba" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
"index exists already"]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<error-handler >
						<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="91633a49-4ccb-43df-a4f5-949ad375043a" >
							<try doc:name="Try" doc:id="76cda148-2dd8-4574-a104-2c7e10310263" >
								<http:request method="POST" doc:name="/creating new index pattern if index is not present in ELK" doc:id="7b61046d-ca15-44a9-b5c5-0ff27fa03d74" config-ref="elk1_request_config" path="/api/saved_objects/index-pattern">
								<http:body><![CDATA[#[{"attributes":{"title":(lower(vars.domain) ++ ".log") ,"timeFieldName":"@timestamp"}}]]]></http:body>
								<http:headers><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/json",
	"kbn-xsrf" : "asasa"
}]]]></http:headers>
							</http:request>
								<flow-ref doc:name="Flow Reference" doc:id="2d781943-2068-479b-a1a1-b4e817f9573f" name="elk-mule-grafana-pocFlow3" />
								<error-handler >
									<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="13a7bad8-23e5-4323-8150-eec0c1ab1b5d" >
										<logger level="INFO" doc:name="Logger" doc:id="08a8bb18-125a-4cc5-9958-806374723ed7" />
									</on-error-continue>
								</error-handler>
							</try>
						</on-error-continue>
					</error-handler>
				</try>
			</when>
			<otherwise >
				<ee:transform doc:name="Transform Message" doc:id="4a274205-b362-442d-8cb8-531dbdba9d28" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
"no application logs"]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
	
</flow>
	<flow name="elk-mule-grafana-pocFlow3" doc:id="d4113162-96f4-41f3-a53a-ef49051a886c">
		<http:request method="POST" doc:name="Request to create datasource" doc:id="f1261695-0eea-4c64-aadf-686c33a205ee" config-ref="grafana_req_config" path="/api/datasources">
			<http:body ><![CDATA[#[output application/json
---
{"access":"proxy","jsonData":{"esVersion":70,"logLevelField":"","logMessageField":"","maxConcurrentShardRequests":5,"timeField":"@timestamp"},"name": lower(vars.domain),"type":"elasticsearch","database" : lower(vars.domain) ++ ".log","url":"http://localhost:9200"}]]]></http:body>
			<http:headers ><![CDATA[#[output application/json
---
{
	"Authorization" : "Bearer " ++ vars.'api-key'
}]]]></http:headers>
		</http:request>
		<http:request method="POST" doc:name="Request to create dashboards and panels" doc:id="19f867d0-4cb7-4867-a7b2-3ef7e2bee9da" config-ref="grafana_req_config" path="/api/dashboards/db">
			<http:body ><![CDATA[#[output application/json
---
{
   "dashboard":
    {
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "panels": [
    {
      "aliasColors": {},
      "bars": true,
      "dashLength": 10,
      "dashes": false,
      "datasource": vars.domain,
      "description": "Frequency of API hits",
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 0
      },
      "hiddenSeries": false,
      "id": 6,
      "legend": {
        "alignAsTable": true,
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "rightSide": true,
        "show": true,
        "total": true,
        "values": true
      },
      "lines": false,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "7.3.6",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "bucketAggs": [
            {
              "field": "@timestamp",
              "id": "2",
              "settings": {
                "interval": "auto",
                "min_doc_count": 0,
                "trimEdges": 0
              },
              "type": "date_histogram"
            }
          ],
          "metrics": [
            {
              "field": "select field",
              "id": "1",
              "type": "count"
            }
          ],
          "query": "\"Request received to api\"",
          "refId": "A",
          "timeField": "@timestamp"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "API -Hits",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": "No Of Hits",
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": "",
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": true,
      "dashLength": 10,
      "dashes": false,
      "datasource": vars.domain,
      "decimals": 0,
      "description": "No of times each HTTP method is invoked",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": null,
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 0
      },
      "hiddenSeries": false,
      "id": 8,
      "legend": {
        "alignAsTable": true,
        "avg": false,
        "current": false,
        "hideEmpty": false,
        "hideZero": false,
        "max": false,
        "min": false,
        "rightSide": true,
        "show": true,
        "total": true,
        "values": true
      },
      "lines": false,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "7.3.6",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "alias": "POST",
          "bucketAggs": [
            {
              "field": "@timestamp",
              "id": "2",
              "settings": {
                "interval": "auto",
                "min_doc_count": 0,
                "trimEdges": 0
              },
              "type": "date_histogram"
            }
          ],
          "metrics": [
            {
              "field": "select field",
              "id": "1",
              "meta": {},
              "settings": {},
              "type": "count"
            }
          ],
          "query": "\"content\" AND \"POST\"",
          "refId": "A",
          "timeField": "@timestamp"
        },
        {
          "alias": "GET",
          "bucketAggs": [
            {
              "field": "@timestamp",
              "id": "2",
              "settings": {
                "interval": "auto",
                "min_doc_count": 0,
                "trimEdges": 0
              },
              "type": "date_histogram"
            }
          ],
          "metrics": [
            {
              "field": "select field",
              "id": "1",
              "type": "count"
            }
          ],
          "query": "\"content\" AND \"GET\"",
          "refId": "B",
          "timeField": "@timestamp"
        },
        {
          "alias": "DELETE",
          "bucketAggs": [
            {
              "field": "@timestamp",
              "id": "2",
              "settings": {
                "interval": "auto",
                "min_doc_count": 0,
                "trimEdges": 0
              },
              "type": "date_histogram"
            }
          ],
          "metrics": [
            {
              "field": "select field",
              "id": "1",
              "type": "count"
            }
          ],
          "query": "\"content\" AND \"DELETE\"",
          "refId": "C",
          "timeField": "@timestamp"
        },
        {
          "alias": "PUT",
          "bucketAggs": [
            {
              "field": "@timestamp",
              "id": "2",
              "settings": {
                "interval": "auto",
                "min_doc_count": 0,
                "trimEdges": 0
              },
              "type": "date_histogram"
            }
          ],
          "metrics": [
            {
              "field": "select field",
              "id": "1",
              "type": "count"
            }
          ],
          "query": "\"content\" AND \"PUT\"",
          "refId": "D",
          "timeField": "@timestamp"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Frequency of HTTP methods",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "transformations": [
        {
          "id": "filterFieldsByName",
          "options": {
            "include": {
              "names": [
                "Time",
                "POST",
                "GET",
                "DELETE",
                "PUT"
              ]
            }
          }
        }
      ],
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": "Count",
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": "",
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": true,
      "dashLength": 10,
      "dashes": false,
      "datasource": vars.domain,
      "decimals": 0,
      "description": "Frequency of an error code.",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": null,
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "@timestamp"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 186
              }
            ]
          }
        ]
      },
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 8
      },
      "hiddenSeries": false,
      "id": 4,
      "legend": {
        "alignAsTable": true,
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "rightSide": true,
        "show": true,
        "total": true,
        "values": true
      },
      "lines": false,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "7.3.6",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "alias": "Error Code 400",
          "bucketAggs": [
            {
              "field": "@timestamp",
              "id": "2",
              "settings": {
                "interval": "auto",
                "min_doc_count": 0,
                "trimEdges": 0
              },
              "type": "date_histogram"
            }
          ],
          "hide": false,
          "metrics": [
            {
              "field": "select field",
              "id": "1",
              "meta": {},
              "settings": {},
              "type": "count"
            }
          ],
          "query": "\"Message\" AND \"Error\" AND \"bad request (400)\"",
          "refId": "A",
          "timeField": "@timestamp"
        },
        {
          "alias": "Error Code 401",
          "bucketAggs": [
            {
              "field": "@timestamp",
              "id": "2",
              "settings": {
                "interval": "auto",
                "min_doc_count": 0,
                "trimEdges": 0
              },
              "type": "date_histogram"
            }
          ],
          "hide": false,
          "metrics": [
            {
              "field": "select field",
              "id": "1",
              "type": "count"
            }
          ],
          "query": "\"Message\" AND \"Error\" AND \"unathorized (401)\"",
          "refId": "B",
          "timeField": "@timestamp"
        },
        {
          "alias": "Error Code 500",
          "bucketAggs": [
            {
              "field": "@timestamp",
              "id": "2",
              "settings": {
                "interval": "auto",
                "min_doc_count": 0,
                "trimEdges": 0
              },
              "type": "date_histogram"
            }
          ],
          "hide": false,
          "metrics": [
            {
              "field": "select field",
              "id": "1",
              "type": "count"
            }
          ],
          "query": "\"Message\" AND \"Error\" AND \"internal server error (500)\"",
          "refId": "C",
          "timeField": "@timestamp"
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Frequency of Error Codes",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "transformations": [
        {
          "id": "filterFieldsByName",
          "options": {
            "include": {
              "names": [
                "Time",
                "Error Code 401",
                "Error Code 500",
                "Error Code 400"
              ]
            }
          }
        }
      ],
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": "Count",
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    }
  ],
  "schemaVersion": 26,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-24h",
    "to": "now"
  },
  "title": vars.domain,
  "uid": null,
  "version": 1
}
}]]]></http:body>
			<http:headers ><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/json",
	"Authorization" : "Bearer "  ++ vars.'api-key' as String default " "
	
}]]]></http:headers>
		</http:request>
	
</flow>
	<flow name="key-deletion-flow" doc:id="44288768-1c6a-482c-8bbf-3adc5bba65a7" >
		<http:listener doc:name="Listener" doc:id="93dd071c-2947-4106-971c-a9d89dcc2e8a" config-ref="httpListenerConfig" path="/deleteKey" allowedMethods="POST"/>
		<os:remove doc:name="Remove" doc:id="0cadbfa1-919c-4019-afbc-f7dee597540a" key="#[attributes.queryParams.key]" objectStore="Object_store"/>
		<ee:transform doc:name="Specific Key Deleted" doc:id="7f57fd85-af3a-4e87-96c1-1cdd69e68c21" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload.key ++ " Deleted"]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="elk-mule-grafana-pocFlow1" doc:id="d32eb536-adf5-48bd-8b44-ea4eba0eb6f1" >
		<http:listener doc:name="Listener" doc:id="0163a14b-547c-4321-9c01-9d223163c5df" config-ref="httpListenerConfig" path="/deletekeys"/>
		<os:clear doc:name="Clear" doc:id="1507161e-4635-4803-996c-2ecd2e769cb6" objectStore="Object_store"/>
		<ee:transform doc:name="Object Store Cleared" doc:id="eab1adbc-48d7-4251-80fb-ec6ae4af259e" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
"Object Store Cleared"]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="elk-mule-grafana-pocFlow2" doc:id="dd03a2ee-dba2-43ec-9266-55f1f639bb16" >
		<http:listener doc:name="Listener" doc:id="5627ecca-ecac-4859-9c0b-87056680fca6" config-ref="httpListenerConfig" path="/all"/>
		<os:retrieve-all-keys doc:name="Retrieve all keys" doc:id="55d64dd3-ef18-4a6c-ac25-306f21d64c55" objectStore="Object_store"/>
		<ee:transform doc:name="Transform Message" doc:id="41be6907-a317-44f1-81e9-3c31191f2a09" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="elk-mule-grafana-pocFlow" doc:id="d51ca44b-560d-4592-adea-0da2db150706">
		<http:request method="POST" doc:name="Copy_of_/creating a data source in grafana" doc:id="4d7e3695-1e3b-4fd4-9ca5-a1af788ce9a1" config-ref="grafana_req_config" path="/api/datasources">
			<http:body><![CDATA[#[output application/json
---
{"access":"proxy","jsonData":{"esVersion":70,"logLevelField":"","logMessageField":"","maxConcurrentShardRequests":5,"timeField":"@timestamp"},"name": lower(vars.domain) ++ ".log","type":"elasticsearch","database" : lower(vars.domain) ++ ".log","url":"http://localhost:9200"}]]]></http:body>
			<http:headers><![CDATA[#[output application/java
---
{
	"Authorization" : "Bearer eyJrIjoiZERtQ3pHZm54RFc4RDZWSjV6SjdVSkxCbHh0QjNrbEQiLCJuIjoidHJpYWxLZXkiLCJpZCI6MX0="
}]]]></http:headers>
		</http:request>
		<http:request method="POST" doc:name="Copy_of_/creating a dashboard in grafana" doc:id="4a32210d-fabb-4672-8d30-a1445239d773" config-ref="grafana_req_config" path="/api/dashboards/db">
			<http:body><![CDATA[#[output application/json
---
{
 "dashboard":  {
        "id": null,
        "panels": [
            {
                "alert": {
                    "alertRuleTags": {},   
                    "conditions": [
                        {
                            "evaluator": {
                                "params": [
                                    25
                                ],
                                "type": "gt"
                            },
                            "operator": {
                                "type": "and"
                            },
                            "query": {
                                "params": [
                                    "A",
                                    "5m",
                                    "now"
                                ]
                            },
                            "reducer": {
                                "params": [],
                                "type": "avg"
                            },
                            "type": "query"
                        }
                    ],
                    "executionErrorState": "alerting",
                    "for": "5m",
                    "frequency": "1m",
                    "handler": 1,
                    "name": "Panel Title alert",
                    "noDataState": "no_data",
                    "notifications": []
                },
                "aliasColors": {},
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "demo-elk.log",
                "fieldConfig": {
                    "defaults": {
                        "custom": {}
                    },
                    "overrides": []
                },
                "fill": 1,
                "fillGradient": 0,
                "gridPos": {
                    "h": 9,
                    "w": 12,
                    "x": 0,
                    "y": 0
                },
                "hiddenSeries": false,
                "id": 2,
                "legend": {
                    "avg": false,
                    "current": false,
                    "max": false,
                    "min": false,
                    "show": true,
                    "total": false,
                    "values": false
                },
                "lines": true,
                "linewidth": 1,
                "nullPointMode": "null",
                "options": {
                    "dataLinks": []
                },
                "percentage": false,
                "pointradius": 2,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [],
                "spaceLength": 10,
                "stack": false,
                "steppedLine": false,
                "targets": [
                    {
                        "refId": "A",
                        "scenarioId": "random_walk"
                    }
                ],
                "thresholds": [
                    {
                        "colorMode": "critical",
                        "fill": true,
                        "line": true,
                        "op": "gt",
                        "value": 50
                    }
                ],
                "timeFrom": null,
                "timeRegions": [],
                "timeShift": null,
                "title": "Panel Title",
                "tooltip": {
                    "shared": true,
                    "sort": 0,
                    "value_type": "individual"
                },
                "type": "graph",
                "xaxis": {
                    "buckets": null,
                    "mode": "time",
                    "name": null,
                    "show": true,
                    "values": []
                },
                "yaxes": [
                    {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    },
                    {
                        "format": "short",
                        "label": null,
                        "logBase": 1,
                        "max": null,
                        "min": null,
                        "show": true
                    }
                ],
                "yaxis": {
                    "align": false,
                    "alignLevel": null
                }
            }
        ],
        "title": (lower(vars.domain) ++ ".log"),
        "uid": null,
        "version": 1
    }
}]]]></http:body>
			<http:headers><![CDATA[#[output application/java
---
{
	"Authorization" : "Bearer eyJrIjoiZERtQ3pHZm54RFc4RDZWSjV6SjdVSkxCbHh0QjNrbEQiLCJuIjoidHJpYWxLZXkiLCJpZCI6MX0=",
	"Content-Type" : "application/json"
}]]]></http:headers>
		</http:request>
	</flow>
	<flow name="key-deletion-flow1" doc:id="ac75d67b-1415-481e-8e0c-d1dd75ba6181" >
		<http:listener doc:name="Listener" doc:id="b6a1eb2a-2bd1-447d-b47c-a9fac145b056" config-ref="httpListenerConfig" path="/deleteKey"/>
		<os:remove doc:name="Removing a specific key-value pair from OS" doc:id="3821862b-6d7d-4859-b1bc-957edd231a6a" key="#[attributes.queryParams.key]" objectStore="Object_store"/>
		<ee:transform doc:name="Specific Key Deleted" doc:id="a10dbd06-7705-45bd-a225-fc356bac0a40" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
attributes.queryParams.key ++ " Deleted"]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
</mule>
